import { ToolConfig } from '@clearfeed-ai/quix-common-agent';
import { DynamicStructuredTool, tool } from '@langchain/core/tools';
import { z } from 'zod';
import { SalesforceConfig } from './types';
import { SalesforceService } from './index';

const SALESFORCE_TOOL_SELECTION_PROMPT = `
Salesforce is a CRM platform that manages:
- Leads: Potential customers with properties like name, company, status, etc.
- Accounts: Organizations with properties like name, industry, revenue, etc.
- Opportunities: Sales deals with stages, amounts, close dates, etc.
- Contacts: People associated with accounts with properties like name, title, email, etc.
- Cases: Support tickets with priority, status, description, etc.

Consider using Salesforce tools when the user wants to:
- Find specific opportunities, accounts, or contacts by name/ID/properties
- Look up contact details like email, phone, job title
- Check account information like industry, size, revenue
- View opportunity status, amount, stage, close date
- Access case details, support history, resolutions
`;

const SALESFORCE_RESPONSE_GENERATION_PROMPT = `
When formatting Salesforce responses:
- Include record IDs when referencing specific records
- Format important contact details in bold
- Present opportunity values and stages clearly
- Include relevant record properties and custom fields
- Format dates in a human-readable format
`;

export function createSalesforceToolsExport(config: SalesforceConfig): ToolConfig {
  const service = new SalesforceService(config);

  const tools: DynamicStructuredTool<any>[] = [
    tool(
      async (args: { keyword: string }) => service.searchOpportunities(args.keyword),
      {
        name: 'search_salesforce_opportunities',
        description: 'Search for opportunities in Salesforce based on a keyword',
        schema: z.object({
          keyword: z.string().describe('The keyword to search for in Salesforce opportunities')
        }),
      }
    ),
    tool(
      async (args: { opportunityId: string; note: string; title?: string }) =>
        service.addNoteToOpportunity(args.opportunityId, args.note, args.title),
      {
        name: 'add_note_to_opportunity',
        description: 'Add a note to an opportunity in Salesforce',
        schema: z.object({
          opportunityId: z.string().describe('The ID of the opportunity to add a note to'),
          note: z.string().describe('The note to add to the opportunity'),
          title: z.string().optional().describe('Title for the note, can be auto-generated by the agent')
        }),
      }
    )
  ];

  return {
    tools,
    prompts: {
      toolSelection: SALESFORCE_TOOL_SELECTION_PROMPT,
      responseGeneration: SALESFORCE_RESPONSE_GENERATION_PROMPT
    }
  };
} 